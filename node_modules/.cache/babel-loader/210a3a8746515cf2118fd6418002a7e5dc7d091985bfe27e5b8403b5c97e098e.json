{"ast":null,"code":"var _jsxFileName = \"D:\\\\Course\\\\ReactJS\\\\tiktok-ui\\\\src\\\\App.js\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /**\n    _ Câu lệnh set lại UserName và Gmail trong Git:\n    git config --global user.name \"Admin\"\n    git config --global user.email \"admin@vinasupport.com\"\t\n      * Bước 1: Tạo dự án đẩy lên Github: Vào trang chủ Github, chọn New rồi tùy chỉnh theo mong muốn rồi Create Repository.\n     * Bước 2: Nếu muốn tự Customize (tùy chỉnh) cấu hình của Webpack thì dùng Customize-cra. Cách cài đặt Customize-cra cho Project, vào Terminal chạy câu lệnh: npm i customize-cra react-app-rewired -D (Nếu như dùng npm, lưu ý -D thì D viết hoa, còn nếu dùng yarn thì lên Customize-cra Github copy câu lệnh dành cho yarn về chạy). Sau khi chạy xong, vào file package.json kiểm tra xem đã có Customize-cra chưa (Nếu có thì là đã xong). Tiếp theo tạo file config-overrides.js ở root directory (Sao cho file config-overrides.js này ngang cấp với folder src của Project) và Copy đoạn code sau rồi Paste vào file config-overrides.js:\n     \n    module.exports = function override(config, env) {\n      // Những cấu hình cần ghi đè của Webpack sẽ code vào đoạn này.\n    return config;\n  }\n     Cuối cùng, vào file package.json, trong phần scripts thì những câu lệnh đang sử dụng thư viện react-script thì thay thế bằng react-app-rewired. Cách chọn nhiều câu lệnh giống nhau để thay thế cho nhanh là bôi đen 1 câu lệnh xong ấn Ctrl + D sẽ tự động chọn thêm những câu lệnh có nội dung tương tự.\n     * Bước 3: Cài đặt và sử dụng thư viện babel-plugin-module-resolver, vào terminal chạy câu lệnh: npm install --save-dev babel-plugin-module-resolver (Nếu như dùng npm, lưu ý -D thì D viết hoa, còn nếu dùng yarn thì lên Customize-cra Github copy câu lệnh dành cho yarn về chạy). Tiếp theo, tạo file .babelrc ở root directory (Sao cho file .babelrc này ngang cấp với folder src của Project):\n  {\n    \"plugins\": [\n        [\n            \"module-resolver\",\n            {\n                \"root\": [\n                    \"./src\"\n                ],\n                \"alias\": {\n                    \"~\": \"./src\"\n                }\n            }\n        ]\n    ]\n  }\n     Kế tiếp cấu hình Editors autocompletion (Tự động hoàn thành đường dẫn trong IDE), tiếp tục tạo thêm file jsconfig.json ở root directory (Sao cho file jsconfig.json này ngang cấp với folder src của Project) và Copy đoạn code sau rồi Paste vào file jsconfig.json:\n  {\n    \"compilerOptions\": {\n        \"baseUrl\": \".\",\n        \"paths\": {\n            \"~/*\": [\n                \"src/*\"\n            ]\n        }\n    }\n  }\n     * Bước 4: Cấu hình Webpack, Copy đoạn code sau rồi Paste vào file config-overrides.js: \n    \n    const { override } = require(\"customize-cra\");\n  module.exports = override(\n  );\n    \n    * Bước 5: Để thêm babelrc vào Webpack vào file config-overrides.js để cấu hình.\n     * Bước 6: Cài đặt react-router-dom, vào Terminal chạy câu lệnh: npm i react-router-dom.\n    */\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wassup!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Course/ReactJS/tiktok-ui/src/App.js"],"sourcesContent":["import {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\n\nfunction App() {\n  /**\n    _ Câu lệnh set lại UserName và Gmail trong Git:\n    git config --global user.name \"Admin\"\n    git config --global user.email \"admin@vinasupport.com\"\t\n\n     * Bước 1: Tạo dự án đẩy lên Github: Vào trang chủ Github, chọn New rồi tùy chỉnh theo mong muốn rồi Create Repository.\n     * Bước 2: Nếu muốn tự Customize (tùy chỉnh) cấu hình của Webpack thì dùng Customize-cra. Cách cài đặt Customize-cra cho Project, vào Terminal chạy câu lệnh: npm i customize-cra react-app-rewired -D (Nếu như dùng npm, lưu ý -D thì D viết hoa, còn nếu dùng yarn thì lên Customize-cra Github copy câu lệnh dành cho yarn về chạy). Sau khi chạy xong, vào file package.json kiểm tra xem đã có Customize-cra chưa (Nếu có thì là đã xong). Tiếp theo tạo file config-overrides.js ở root directory (Sao cho file config-overrides.js này ngang cấp với folder src của Project) và Copy đoạn code sau rồi Paste vào file config-overrides.js:\n     \n    module.exports = function override(config, env) {\n      // Những cấu hình cần ghi đè của Webpack sẽ code vào đoạn này.\n    return config;\n}\n\n    Cuối cùng, vào file package.json, trong phần scripts thì những câu lệnh đang sử dụng thư viện react-script thì thay thế bằng react-app-rewired. Cách chọn nhiều câu lệnh giống nhau để thay thế cho nhanh là bôi đen 1 câu lệnh xong ấn Ctrl + D sẽ tự động chọn thêm những câu lệnh có nội dung tương tự.\n     * Bước 3: Cài đặt và sử dụng thư viện babel-plugin-module-resolver, vào terminal chạy câu lệnh: npm install --save-dev babel-plugin-module-resolver (Nếu như dùng npm, lưu ý -D thì D viết hoa, còn nếu dùng yarn thì lên Customize-cra Github copy câu lệnh dành cho yarn về chạy). Tiếp theo, tạo file .babelrc ở root directory (Sao cho file .babelrc này ngang cấp với folder src của Project):\n{\n    \"plugins\": [\n        [\n            \"module-resolver\",\n            {\n                \"root\": [\n                    \"./src\"\n                ],\n                \"alias\": {\n                    \"~\": \"./src\"\n                }\n            }\n        ]\n    ]\n}\n\n    Kế tiếp cấu hình Editors autocompletion (Tự động hoàn thành đường dẫn trong IDE), tiếp tục tạo thêm file jsconfig.json ở root directory (Sao cho file jsconfig.json này ngang cấp với folder src của Project) và Copy đoạn code sau rồi Paste vào file jsconfig.json:\n\n{\n    \"compilerOptions\": {\n        \"baseUrl\": \".\",\n        \"paths\": {\n            \"~/*\": [\n                \"src/*\"\n            ]\n        }\n    }\n}\n\n    * Bước 4: Cấu hình Webpack, Copy đoạn code sau rồi Paste vào file config-overrides.js: \n    \n    const { override } = require(\"customize-cra\");\n\nmodule.exports = override(\n\n);\n    \n    * Bước 5: Để thêm babelrc vào Webpack vào file config-overrides.js để cấu hình.\n\n    * Bước 6: Cài đặt react-router-dom, vào Terminal chạy câu lệnh: npm i react-router-dom.\n\n   */\n  return (\n    <Router>\n    <>\n      \n          <h1>Wassup!!!</h1>\n      \n    </>\n    </Router>\n  )\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAQA,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvE,SAASC,GAAGA,CAAA,EAAG;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAUE,oBACEH,OAAA,CAACJ,MAAM;IAAAQ,QAAA,eACPJ,OAAA,CAAAE,SAAA;MAAAE,QAAA,eAEMJ,OAAA;QAAAI,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;EAErB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAEb;AAACC,EAAA,GAnEQN,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}